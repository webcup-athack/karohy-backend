# name: Karohy backend - CI prod Deployment
# env:
#   VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
#   VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
# on:
#   push:
#     branches:
#       - main
# jobs:
#   Build_Prod:
#     runs-on: ubuntu-latest
#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v2
#       - name: Setup Node.js
#         uses: actions/setup-node@v2
#         with:
#           node-version: 16
#       - name: Install dependencies
#         run: npm ci
#       - name: Run tests and lint
#         run: npm run build
#   Deploy_Prod:
#     runs-on: ubuntu-latest
#     needs: Build_Prod
#     if: success()

#     steps:
#       - uses: actions/checkout@v2
#       - name: Install Vercel CLI
#         run: npm install --global vercel@latest
#       - name: Pull Vercel Environment Information
#         run: vercel pull --yes --environment=production --token=${{ secrets.VERCEL_TOKEN }}
#       - name: Build Project Artifacts
#         run: vercel build --prod --token=${{ secrets.VERCEL_TOKEN }}
#       - name: Deploy Project Artifacts to Vercel
#         run: vercel deploy --prebuilt --prod --token=${{ secrets.VERCEL_TOKEN }}
name: Karohy backend - CI prod Deployment

env:
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}

on:
  push:
    branches:
      - main

jobs:
  Build_Deploy_Prod:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 16

      - name: Install dependencies
        run: npm ci

      - name: Install Vercel CLI
        run: npm install --global vercel@latest

      - name: Pull Vercel Environment Information
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
        run: |
          vercel pull --yes --environment=production --token $VERCEL_TOKEN

      - name: Build project
        run: npm run build

      - name: Deploy to Vercel
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
        run: |
          # Deploy the build directory to Vercel
          vercel --prod --token $VERCEL_TOKEN